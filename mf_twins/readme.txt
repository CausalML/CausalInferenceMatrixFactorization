##########
#  Code
##########
corrup.R: generate noisy or missing proxies from the original dataset (comp_data.csv in Data directory) given the number of proxies, the fraction of noisy entries, and number of repetition 

matrix_fac.jl: matrix factorization when the proxy matrix has no missing values, the output is stored in .jld file in the Output/Date directory; 
matrix_fac.ipynb: same content as matrix_fac.jl except that matrix_fac.jl accepts command line inputs while this .ipynb needs specification of the parameter; the final line in this .ipynb parses the matrix factorization output (.jld) and stores the Uhat in the Output/Date directory

mf_miss.jl: matrix factorization when the proxy matrix has missing values 
mf_miss.ipynb: same content as mf_miss.jl except that mf_miss.jl accepts command line inputs while this .ipynb needs specification of the parameter; the final line in this .ipynb parses the matrix factorization output (.jld) and stores the Uhat, Vhat in the Output/Date directory

causal.R: compute the causal effect estimates based on matrix factorization output 

#############
# Data
#############
comp_data.csv: the original dataset with all covariates and no noise 

all noisy proxy data generated by corrup.R are also stored in the Data directory

all missing proxy data generated by corrup.R are stored in Data/missing directory

#############
# Output 
#############
This directory is organized by Date subdirectories where Date is specified in the matrix factorization experiments. 

The .jld files are output from matrix_fac.jl and mf_miss.jl that include Uhat, Vhat, cross-validation best rank, and other information regarding matrix factorization. 

The .txt files stores logging information for the matrix factorization.

The .csv files are generated by the last lines in matrix_fac.ipynb, mf_miss.ipynb, which extract the Uhat (and Vhat) from the corresponding .jld files. 

#############
# workflow
############
use corrup.R to generate proxy data --> use matrix_fac.ipynb/mf_miss.ipynb to compute matrix factorization and parse the output --> use causal.R to compute the causal effect estimates 

############
# version
############
julia: 0.6.2
R: 3.4.3
R packages 
mice_2.46.0  doParallel_1.0.11  optmatch_0.9  MatchIt_3.0.2


